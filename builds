#!/bin/bash
#

set -e

msg(){
	printf " :: $1 \n"
}

err(){
	printf " :: ERROR: $1 \n"
}

print_help(){
	cat << EOF
Usage: `basename $0` [option]
Options:
	-a, --arch    change target
	-c, --clean   clean
	-h, --help    print this message
Support targets:
	`cd $TARG_DIR; ls -m`
EOF
}

check(){
	if [ ! -f "${CONFILE}" ]; then
		err "File '${CONFILE}', not found."
		exit 1
	else
		. ${CONFILE}
	fi
}

clean(){
	for dir in ${DESTDIR} ${BUILD_DIR} ; do
		msg "Remove: $dir"
		rm -rf $dir
		sync
	done
	rm -rf ${TMP_DIR}
}

parser(){
	while [ "$1" ]; do
		case "$1" in
			-c|--clean)
				clean
				exit 0 ;;
			-a|--arch)
				arch=$2
				shift ;;
			-h|--help)
				print_help
				exit 0 ;;
		esac
		shift
	done
}

pack(){
	msg "Pack $DESTDIR -> $CWD/musl-toolchain-$arch.tar.xz archive."
	cd $DESTDIR
	sync
	sudo chown -R root:root . || exit 1
	sudo tar -cvf . - | xz -9 -c > $CWD/musl-toolchain-$arch.tar.xz
	sync
}

main(){
	check "$@"

	parser "$@"

	# load target
	if [ -f "${TARG_DIR}/$arch" ]; then
		. "${TARG_DIR}/$arch"
	else
		err "Unsupported '$arch' target."
		exit 1
	fi

	local JOBS=$(expr `nproc` + 1)
	export MAKEFLAGS="-j${JOBS}"

	install -dm755 ${TMP_DIR}

	msg "Target:    ${TARGET}"
	msg "CPU:       ${CPU}"
	msg "Triplet:   ${TARGET_TRIP}"
	msg "MAKEFLAGS: ${MAKEFLAGS}"

	sleep 1s

	# loop
	for sc in ${SC_DIR}/* ; do
		printf " \n"
		msg "Run recepi: $(echo $sc | sed -e "s|${SC_DIR}/||g")"
		. $sc

		tarball=`find ${SRC_DIR}/ -name $name-*`
		if [ "$tarball" = "" ]; then
			err "Sources '$name', not found."
			exit 1
		fi

		if [ ! -d ${NATIVE_PREFIX} ]; then
			install -dm755 ${NATIVE_PREFIX}
		elif [ ! -d ${CROSS_PREFIX} ]; then
			install -dm755 ${CROSS_PREFIX}
		fi

		install -dm755 ${BUILD_DIR}
		pushd ${BUILD_DIR} >/dev/null
			msg "Unpack sources: `echo $tarball | sed -e "s|${SRC_DIR}/||g" `"
			tar -xf $tarball || exit 1
			sync
			(set -ex ; build )
			sync
			unset MAKEFLAGS
		popd >/dev/null

		local scs=`echo $sc | sed -e "s|${SC_DIR}/||g" `
		if [ "$?" = 0 ]; then
			touch ${TMP_DIR}/$scs
			msg "Build: $scs - ok!"
			rm -rf $BUILD_DIR
		fi
	done

	if [ "$?" = 0 ]; then
		pack "$@"
		rm -rf ${TMP_DIR}
		msg "Done - ${DESTDIR}"
		exit 0
	else
		err "Build, some errors"
		exit 1
	fi
}

arch="$(uname -m)"

CWD="${PWD}"
TMP_DIR="${CWD}/tmp"
BUILD_DIR="${CWD}/build_dir"
SRC_DIR="${CWD}/sources"
SC_DIR="${CWD}/scripts"
CONFILE="${CWD}/config"
TARG_DIR="${CWD}/targets"
BIN_DIR="${CWD}/binary"


main "$@"
